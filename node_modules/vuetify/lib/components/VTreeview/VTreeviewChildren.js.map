{"version":3,"file":"VTreeviewChildren.js","names":["VTreeviewGroup","makeVTreeviewItemProps","VTreeviewItem","VCheckboxBtn","VDivider","VListSubheader","makeDensityProps","IconValue","computed","reactive","ref","toRaw","genericComponent","getIndentLines","pick","propsFactory","renderSlot","makeVTreeviewChildrenProps","disabled","Boolean","loadChildren","Function","loadingIcon","type","String","default","items","Array","openOnClick","undefined","indeterminateIcon","falseIcon","trueIcon","returnObject","activatable","selectable","selectedColor","selectStrategy","Object","index","Number","isLastGroup","separateRoots","parentIndentLines","indentLinesVariant","path","VTreeviewChildren","name","props","setup","_ref","slots","isLoading","Set","activatorItems","isClickOnOpen","checkChildren","item","length","children","add","value","raw","delete","selectItem","select","isSelected","map","itemProps","loading","has","nextItemHasChildren","at","depth","isLast","treeItemProps","isFirst","hideAction","hideActions","indentLines","leafLinks","variant","renderItem","_createVNode","prepend","slotProps","_createElementVNode","_Fragment","includes","density","isIndeterminate","v","e","stopPropagation","key","internalItem","append","title","subtitle","$stable","treeviewGroupProps","filterProps","treeviewChildrenProps","_mergeProps","activator","_ref2","activatorProps","node","onToggleExpand","onClick","divider","subheader","leaf"],"sources":["../../../src/components/VTreeview/VTreeviewChildren.tsx"],"sourcesContent":["// Components\nimport { VTreeviewGroup } from './VTreeviewGroup'\nimport { makeVTreeviewItemProps, VTreeviewItem } from './VTreeviewItem'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VDivider } from '@/components/VDivider'\nimport { VListSubheader } from '@/components/VList'\n\n// Composables\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, reactive, ref, toRaw } from 'vue'\nimport { genericComponent, getIndentLines, pick, propsFactory, renderSlot } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from '@/components/VList/VList'\nimport type { VListItemSlots } from '@/components/VList/VListItem'\nimport type { SelectStrategyProp } from '@/composables/nested/nested'\nimport type { GenericProps, IndentLinesVariant, IndentLineType } from '@/util'\n\nexport type VTreeviewChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & {\n    item: T\n    internalItem: InternalListItem<T>\n  }\n} & {\n  default: never\n  item: {\n    props: InternalListItem['props']\n    item: T\n    internalItem: InternalListItem<T>\n  }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n}\n\nexport const makeVTreeviewChildrenProps = propsFactory({\n  disabled: Boolean,\n  loadChildren: Function as PropType<(item: unknown) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  items: Array as PropType<readonly InternalListItem[]>,\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  returnObject: Boolean,\n  activatable: Boolean,\n  selectable: Boolean,\n  selectedColor: String,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n  index: Number,\n  isLastGroup: Boolean,\n  separateRoots: Boolean,\n  parentIndentLines: Array as PropType<IndentLineType[]>,\n  indentLinesVariant: String as PropType<IndentLinesVariant>,\n  path: {\n    type: Array as PropType<number[]>,\n    default: () => [],\n  },\n  ...pick(makeVTreeviewItemProps(), ['hideActions']),\n  ...makeDensityProps(),\n}, 'VTreeviewChildren')\n\nexport const VTreeviewChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n  },\n  slots: VTreeviewChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VTreeviewChildren',\n\n  props: makeVTreeviewChildrenProps(),\n\n  setup (props, { slots }) {\n    const isLoading = reactive(new Set<unknown>())\n    const activatorItems = ref<VTreeviewItem[]>([])\n\n    const isClickOnOpen = computed(() => (\n      !props.disabled && (\n        props.openOnClick != null\n          ? props.openOnClick\n          : props.selectable && !props.activatable\n      )))\n\n    async function checkChildren (item: InternalListItem) {\n      try {\n        if (!props.items?.length || !props.loadChildren) return\n\n        if (item?.children?.length === 0) {\n          isLoading.add(item.value)\n          await props.loadChildren(item.raw)\n        }\n      } finally {\n        isLoading.delete(item.value)\n      }\n    }\n\n    function selectItem (select: (value: boolean) => void, isSelected: boolean) {\n      if (props.selectable) {\n        select(isSelected)\n      }\n    }\n\n    return () => slots.default?.() ?? props.items?.map((item, index, items) => {\n      const { children, props: itemProps } = item\n      const loading = isLoading.has(item.value)\n      const nextItemHasChildren = !!items.at(index + 1)?.children\n\n      const depth = props.path?.length ?? 0\n      const isLast = items.length - 1 === index\n      const treeItemProps = {\n        index,\n        depth,\n        isFirst: index === 0,\n        isLast,\n        path: [...props.path, index],\n        hideAction: props.hideActions,\n      }\n\n      const indentLines = getIndentLines({\n        depth,\n        isLast,\n        isLastGroup: props.isLastGroup,\n        leafLinks: !props.hideActions,\n        separateRoots: props.separateRoots,\n        parentIndentLines: props.parentIndentLines,\n        variant: props.indentLinesVariant,\n      })\n\n      function renderItem (itemProps: Record<string, unknown>) {\n        return (\n          <VTreeviewItem { ...itemProps }>\n            {{\n              prepend: slotProps => (\n                <>\n                  { props.selectable && (!children || (children && !['leaf', 'single-leaf'].includes(props.selectStrategy as string))) && (\n                    <div>\n                      <VCheckboxBtn\n                        key={ item.value }\n                        modelValue={ slotProps.isSelected }\n                        disabled={ props.disabled }\n                        loading={ loading }\n                        color={ props.selectedColor }\n                        density={ props.density }\n                        indeterminate={ slotProps.isIndeterminate }\n                        indeterminateIcon={ props.indeterminateIcon }\n                        falseIcon={ props.falseIcon }\n                        trueIcon={ props.trueIcon }\n                        onUpdate:modelValue={ v => selectItem(slotProps.select, v) }\n                        onClick={ (e: PointerEvent) => e.stopPropagation() }\n                        onKeydown={ (e: KeyboardEvent) => {\n                          if (!['Enter', 'Space'].includes(e.key)) return\n                          e.stopPropagation()\n                          selectItem(slotProps.select, slotProps.isSelected)\n                        }}\n                      />\n                    </div>\n                  )}\n\n                  { slots.prepend?.({ ...slotProps, ...treeItemProps, item: item.raw, internalItem: item }) }\n                </>\n              ),\n              append: slots.append\n                ? slotProps => slots.append?.({ ...slotProps, ...treeItemProps, item: item.raw, internalItem: item })\n                : undefined,\n              title: slots.title ? slotProps => slots.title?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n              subtitle: slots.subtitle ? slotProps => slots.subtitle?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n              $stable: true,\n            }}\n          </VTreeviewItem>\n        )\n      }\n\n      const treeviewGroupProps = VTreeviewGroup.filterProps(itemProps)\n      const treeviewChildrenProps = VTreeviewChildren.filterProps({ ...props, ...treeItemProps })\n\n      return children ? (\n        <VTreeviewGroup\n          { ...treeviewGroupProps }\n          value={ props.returnObject ? item.raw : treeviewGroupProps?.value }\n          rawId={ treeviewGroupProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              return renderItem({\n                ...itemProps,\n                ...activatorProps,\n                loading,\n                hideActions: props.hideActions,\n                indentLines: indentLines.node,\n                value: props.returnObject ? item.raw : itemProps.value,\n                onToggleExpand: [() => checkChildren(item), activatorProps.onClick] as any,\n                onClick: isClickOnOpen.value\n                  ? [() => checkChildren(item), activatorProps.onClick] as any\n                  : () => selectItem(activatorItems.value[index]?.select, !activatorItems.value[index]?.isSelected),\n              })\n            },\n            default: () => (\n              <VTreeviewChildren\n                { ...treeviewChildrenProps }\n                items={ children }\n                indentLinesVariant={ props.indentLinesVariant }\n                parentIndentLines={ indentLines.children }\n                isLastGroup={ nextItemHasChildren }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n            $stable: true,\n          }}\n        </VTreeviewGroup>\n      ) : renderSlot(\n        slots.item,\n        { props: itemProps, item: item.raw, internalItem: item },\n        () => {\n          if (item.type === 'divider') {\n            return renderSlot(\n              slots.divider,\n              { props: item.raw },\n              () => <VDivider { ...item.props } />,\n            )\n          }\n          if (item.type === 'subheader') {\n            return renderSlot(\n              slots.subheader,\n              { props: item.raw },\n              () => <VListSubheader { ...item.props } />,\n            )\n          }\n          return renderItem({\n            ...itemProps,\n            hideActions: props.hideActions,\n            indentLines: indentLines.leaf,\n            value: props.returnObject ? toRaw(item.raw) : itemProps.value,\n          })\n        })\n    })\n  },\n})\n"],"mappings":"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","ignoreList":[]}